{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","style","cursor","onClick","float","color","bind","Link","to","class","marginRight","Contacts","Fragment","contacts_Contact","Header","text","href","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","About","NotFound","Test","title","body","fetch","then","response","json","EditContact","updContact","match","params","put","App","context_Provider","BrowserRouter","basename","process","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.55fbe3e4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  /*  Using fetch API \r\n componentDidMount() {\r\n     fetch(\"https://jsonplaceholder.typicode.com/users\") //Using Promises and core javascript\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          contacts: data\r\n        })\r\n      );\r\n    */\r\n\r\n  /*  Using Axioms\r\n   componentDidMount() {\r\n    axios\r\n      .get(\"http://jsonplaceholder.typicode.com/users\")\r\n      .then(res => this.setState({ contacts: res.data }));\r\n  \r\n    }\r\n */\r\n  /* Using async await */\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nclass Contact extends Component {\r\n  /* Using With a constructor \r\n  constructor() {\r\n    super();\r\n    this.state = { a: \"ABCD\" };\r\n    this.onShowClick = this.onShowClick.bind(this);\r\n  }\r\n*/\r\n  /* Using without a constructor  \r\nstate = { a: \"ABCD\" };\r\n\r\n  onShowClick() {     //Function\r\n    console.log(this.state);\r\n  }\r\n  \r\n  */\r\n\r\n  /* Use the following function when not using arrow function in the <i> tag\r\n  onShowClick = id => {\r\n    //Updating State here\r\n    // this.setState({ showContactInfo: false }); //This sets the state of showContactInfo to false just once\r\n    //In order to apply toggle operation on this we use following\r\n    this.setState({ showContactInfo: !this.state.showContactInfo });\r\n  };\r\n*/\r\n  state = { showContactInfo: false };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`http://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id }); //Dont do this in real life when you have access to a real database\r\n    }\r\n  };\r\n\r\n  render() {\r\n    // const { contact } = this.props;\r\n    const { name, email, phone, id } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}\r\n                &nbsp;\r\n                <i\r\n                  // onClick={this.onShowClick.bind(this)} //If using without a constructor below statement\r\n                  //onClick={this.onShowClick} //If using with a constructor comment above statement\r\n\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ float: \"right\", cursor: \"pointer\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    class=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      float: \"right\",\r\n                      cursor: \"pointer\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\"\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group lead\">\r\n                  <li className=\"list-group-item bold\">\r\n                    <strong>Email: </strong>\r\n                    {email}\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <strong>Phone:&nbsp;</strong>\r\n                    {phone}\r\n                  </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  /*deleteContact = id => {\r\n    const { contacts } = this.state;\r\n\r\n    //Use filter function here\r\n    const newContacts = contacts.filter(contact => contact.id !== id);\r\n\r\n    this.setState({\r\n      contacts: newContacts\r\n    });\r\n  };\r\n*/\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          //const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-4\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {value.contacts.map(contact => (\r\n                <Contact\r\n                  key={contact.id}\r\n                  // name={contact.name} email={contact.email} phone={contact.phone} />\r\n                  // instead of passing the values individually we pass 'contact' object\r\n                  contact={contact}\r\n                  //deleteClickHandler={this.deleteContact.bind(this, 1)}\r\n                />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","// Functional Component for header\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { text } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {text}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" />\r\n                Home\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> Add\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\n//Default Props\r\nHeader.defaultProps = {\r\n  text: \"Contact Manager\"\r\n};\r\n\r\n//Prop Types\r\nHeader.propTypes = {\r\n  text: PropTypes.string.isRequired\r\n};\r\n\r\n/*\r\nconst headingStyle = {\r\n  color: \"green\",\r\n  fontSize: \"80px\"\r\n};\r\n*/\r\nexport default Header;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  name,\r\n  label,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\n// import uuid from \"uuid\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: \"\" //form validation implementation\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault(); //To stop submitting from default values\r\n    const { name, email, phone } = this.state;\r\n    //Check for errors here\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      // id: uuid(),\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"http://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\"); //Redirecting within a react application\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple App to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry,that page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n        })\r\n      );\r\n  }\r\n\r\n  /*\r\n  componentWillMount() {\r\n    console.log(\"Component will mount\");\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(\"Component Did Update\");\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps, nextState) {\r\n    console.log(\"Component Will update\"); //Used in redux.\r\n  }\r\n*/\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\n// import uuid from \"uuid\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: \"\" //form validation implementation\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params; //To receive the paramenter from the addressbar\r\n    const res = await axios.get(\r\n      `http://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault(); //To stop submitting from default values\r\n    const { name, email, phone } = this.state;\r\n    //Check for errors here\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Name is required\" } });\r\n      return;\r\n    }\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `http://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    //Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\"); //Redirecting within a react application\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from \"react\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"./context\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Header />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />{\" \"}\n                {/*This is used to redirect to a non available page */}\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}